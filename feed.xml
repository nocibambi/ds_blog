<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.1">Jekyll</generator><link href="https://andrasnovoszath.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://andrasnovoszath.com/" rel="alternate" type="text/html" /><updated>2022-10-21T01:39:59-05:00</updated><id>https://andrasnovoszath.com/feed.xml</id><title type="html">Value this</title><subtitle>This is not another blog about bitcoin.</subtitle><entry><title type="html">Setting up AWS Cloud for InfluxDB</title><link href="https://andrasnovoszath.com/aws/ec2/influxdb/2020/11/18/influxdb-aws-cloud-setup.html" rel="alternate" type="text/html" title="Setting up AWS Cloud for InfluxDB" /><published>2020-11-18T00:00:00-06:00</published><updated>2020-11-18T00:00:00-06:00</updated><id>https://andrasnovoszath.com/aws/ec2/influxdb/2020/11/18/influxdb-aws-cloud-setup</id><content type="html" xml:base="https://andrasnovoszath.com/aws/ec2/influxdb/2020/11/18/influxdb-aws-cloud-setup.html"><![CDATA[<p>In this post you can learn the steps you need to set up InfluxDB on an AWS EC2 instance.</p>

<p>For better comprehension, this posts is structured into the following sections:</p>

<ol>
  <li>Set up an AWS account and an EC2 Virtual Server</li>
  <li>Set up an AWS EC2 instance</li>
  <li>Set up InfluxDB on you EC2 instance</li>
  <li>Try out InfluxDB on your EC2 instance</li>
</ol>

<h2 id="set-up-an-ec2-virtual-server">Set up an EC2 Virtual Server</h2>

<p>In this section we will set up an EC2 Virtual Server. After this step we can create our EC2 instance. This phase consists of the following steps:</p>

<ol>
  <li>Set up an AWS account</li>
  <li>Set up an EC2 key pair</li>
  <li>Set up an AWS user</li>
  <li>Install and set up the AWS command line client (AWS CLI) on your system</li>
</ol>

<h3 id="set-up-an-aws-account">Set up an AWS account</h3>

<p>In case you do not have an AWS account, you can create one for free.</p>

<ol>
  <li><a href="https://aws.amazon.com/free/">Create an AWS account</a></li>
  <li>
    <p>Select the appropriate region:</p>

    <p><img src="/images/influxdb/aws_cloudformation/influxdb-aws-region.png" alt="aws region select" /></p>
  </li>
</ol>

<h3 id="set-up-an-ec2-key-pair">Set up an EC2 Key pair</h3>

<p>In order to access your cloud server you need to set up a proper authentication by generating a key pair.</p>

<ol>
  <li>
    <p>Search for “EC2” in the <strong>Find Services</strong> search box and select <strong>EC2 (Virtual Servers in the Cloud)</strong>. (Note that you have to provide credit card information and that it may take up to 24 hours for amazon to activate):</p>

    <p><img src="/images/influxdb/aws_cloudformation/influxdb-aws-ec2-select.png" alt="aws ec2 select" /></p>

    <p>This menu contains most of the EC2-related services so we will work here for a big part of this tutorial.</p>
  </li>
  <li>
    <p>Select <strong>Key Pairs</strong> and create a key pair:</p>

    <p><img src="/images/influxdb/2020-12-02-influxdb-aws-create-key-pair.png" alt="Create key pair" /></p>
  </li>
  <li>Download the keys.</li>
  <li>
    <p>Make the key readable only by the owner. Navigate to the folder to where you downloaded your key and change the key’s permissions:</p>

    <p><code class="highlighter-rouge">chmod 400 name-of-the-key.pem</code></p>
  </li>
</ol>

<h3 id="set-up-an-aws-user">Set up an AWS user</h3>

<p>After creating a key pair, you also need to create a user and assign it to a user group with the necessary permissions.</p>

<ol>
  <li>
    <p>Open <strong>IAM</strong> (Identity and Access Management) from <strong>Services</strong>:</p>

    <p><img src="/images/influxdb/aws_cloudformation/infludb-aws-select-iam.png" alt="open-aim" /></p>
  </li>
  <li>
    <p>Select <strong>Add user</strong>:</p>

    <p><img src="/images/influxdb/aws_cloudformation/infludb-aws-iam-create-user.png" alt="iam-new-user" /></p>
  </li>
  <li>
    <p>Name the user and add access rights to it:</p>

    <p><img src="/images/influxdb/aws_cloudformation/influxdb-aws-iam-new-user-access.png" alt="iam-new-user-access" /></p>
  </li>
  <li>
    <p>On the <strong>Set Permissions</strong> screen, click on <strong>Add user to group</strong> and <strong>Create a group</strong>:</p>

    <p><img src="/images/influxdb/aws_cloudformation/influxdb-aws-iam-new-user-create-group.png" alt="iam-new-user-new-group" /></p>
  </li>
  <li>
    <p>Define a name and add a policy for the new group:</p>

    <p><img src="/images/influxdb/aws_cloudformation/influxdb-aws-iam-group-permissions.png" alt="iam-new-group" /></p>
  </li>
  <li>
    <p>At the end of the process, you will see your access details:</p>

    <p><img src="/images/influxdb/aws_cloudformation/influxdb-aws-iam-new-user-success.png" alt="iam-new-user-success" /></p>

    <p>Here, write down somewhere your <strong>Access Key ID</strong> and your <strong>Secret Access Key</strong> as you will need them in a later step and <a href="https://aws.amazon.com/blogs/security/wheres-my-secret-access-key/">you will not be able to regenerate it</a>.</p>
  </li>
</ol>

<p>Now, you have set up a user and credentials. In the next step, you will install the AWS Command Line Interface on your system.</p>

<h3 id="set-up-aws-cli-on-your-system">Set up AWS CLI on your system</h3>

<p>The AWS CLI will allow you to configure and access your AWS EC2 instance from the terminal.</p>

<ol>
  <li>
    <p>Install the AWS CLI on your system.</p>

    <p>On a linux machine, you can do this as here:</p>

    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code> curl <span class="s2">"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"</span> <span class="nt">-o</span> <span class="s2">"awscliv2.zip"</span>
 unzip awscliv2.zip
 <span class="nb">sudo</span> ./aws/install
</code></pre></div>    </div>

    <p>For other systems and for further instructions <a href="https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2.html">see this guide</a>.</p>

    <p>Verfify the version you installed:</p>

    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv">$ </span>aws <span class="nt">--version</span>
 aws-cli/2.1.2 Python/3.7.3 Linux/5.4.0-54-generic exe/x86_64.ubuntu.20
</code></pre></div>    </div>
  </li>
  <li>
    <p>Create a folder where you will store your keys and your yaml configuration.</p>

    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">mkdir</span> ~/Projects/influxdb_aws_cloudformation
 <span class="nb">cd</span> ~/Projects/influxdb_aws_cloudformation
 <span class="nb">mv</span> ~/Downloads/name-of-the-key.pem <span class="nb">.</span>
 <span class="nb">touch </span>config.yml
</code></pre></div>    </div>
  </li>
  <li>
    <p>Configure AWS with <code class="highlighter-rouge">aws configure</code>. Here you need to add your <strong>Access Key ID</strong>, your <strong>Secret Access Key</strong> (that you generated for your user at the IAM), and the <strong>region name</strong> (e.g. <code class="highlighter-rouge">eu-central-1</code>). You can skip the output format.</p>
  </li>
</ol>

<p>Now you have everything you need to set up your EC2 instance. This is what we will do in the next step.</p>

<h2 id="set-up-an-aws-ec2-instance">Set up an AWS EC2 instance</h2>

<p>In this section we will go through the steps to create your EC2 instance. This section consists of the following steps:</p>

<ol>
  <li>Identify and EC2 image to use</li>
  <li>Define your stack’s resources</li>
  <li>Create an AWS Cloud Formation stack</li>
  <li>Connect to your instance</li>
</ol>

<h3 id="find-an-ec2-image">Find an EC2 image</h3>

<ol>
  <li>Open the <a href="https://aws.amazon.com/marketplace/">Amazon AWS Marketplace</a>.</li>
  <li>
    <p>Find a public image</p>

    <p><img src="/images/influxdb/2020-11-20-influxdb-aws-find-public-image.png" alt="Find public image" /></p>
  </li>
</ol>

<p>If you are not</p>

<h3 id="define-resources">Define resources</h3>

<p>Resources
Logical ID
Instance properties
AMI (Amazon Machine Image) ID</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">Resources</span><span class="pi">:</span>
  <span class="na">Appnode</span><span class="pi">:</span>
    <span class="na">Type</span><span class="pi">:</span> <span class="s">AWS::EC2::Instance</span>
    <span class="na">Properties</span><span class="pi">:</span>
      <span class="na">InstanceType</span><span class="pi">:</span> <span class="s">t2.nano</span>
      <span class="na">ImageId</span><span class="pi">:</span> <span class="s">ami-06a719e5f8e22c33b</span> <span class="c1"># The AMI instance ID</span>
      <span class="na">Keyname</span><span class="pi">:</span> <span class="s">InfluxDB_AWS_example</span> <span class="c1"># The name of your key pair</span>
      <span class="na">SecurityGroups</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="kt">!Ref</span> <span class="s">AppnodeSecurityGroup</span> <span class="c1"># Reference the security group defined below</span>
</code></pre></div></div>

<p>You need to define a security group. Security groups act as virtual firewalls for your incoming/outgoing traffic with the help of rules. You can read more about them <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html">here</a>. Here, we define an <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html">inbound security group</a>. For particular rules, <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html#SecurityGroupRules">see here</a>.</p>

<p>We define the security group and link it to our app node definition with the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ref.html"><code class="highlighter-rouge">Ref</code> function</a>.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Define the security group</span>
<span class="na">AppnodeSecurityGroup</span><span class="pi">:</span>
  <span class="na">Type</span><span class="pi">:</span> <span class="s">AWS::EC2::SecurityGroup</span>
  <span class="na">Properties</span><span class="pi">:</span>
    <span class="na">GroupDescription</span><span class="pi">:</span> <span class="s">SSH enabled app nodes</span>
    <span class="c1"># Inbound security rule</span>
    <span class="c1"># Expose the HTTP port 80 with tcp to inbound traffic from andy Ipv4 addresses</span>
    <span class="na">SecurityGroupIngress</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">IpProtocol</span><span class="pi">:</span> <span class="s">tcp</span>
        <span class="na">FromPort</span><span class="pi">:</span> <span class="s1">'</span><span class="s">80'</span>
        <span class="na">ToPort</span><span class="pi">:</span> <span class="s1">'</span><span class="s">80'</span>
        <span class="na">CidrIp</span><span class="pi">:</span> <span class="s">0.0.0.0/0</span>
</code></pre></div></div>

<p>Define Bash script to install docker and influxdb on the image.</p>

<p>The full yaml:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">Resources</span><span class="pi">:</span>
  <span class="na">AppNode</span><span class="pi">:</span>
    <span class="na">Type</span><span class="pi">:</span> <span class="s">AWS::EC2::Instance</span>
    <span class="na">Properties</span><span class="pi">:</span>
      <span class="na">InstanceType</span><span class="pi">:</span> <span class="s">t2.micro</span>
      <span class="na">ImageId</span><span class="pi">:</span> <span class="s">ami-03d85bfa79ad10274</span>
      <span class="na">KeyName</span><span class="pi">:</span> <span class="s">InfluxDB_AWS_example</span>
      <span class="na">SecurityGroups</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="kt">!Ref</span> <span class="s">AppNodeSG</span>
  <span class="na">AppNodeSG</span><span class="pi">:</span>
    <span class="na">Type</span><span class="pi">:</span> <span class="s">AWS::EC2::SecurityGroup</span>
    <span class="na">Properties</span><span class="pi">:</span>
      <span class="na">GroupDescription</span><span class="pi">:</span> <span class="s">for the app nodes that allow ssh</span>
      <span class="na">SecurityGroupIngress</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">IpProtocol</span><span class="pi">:</span> <span class="s">tcp</span>
        <span class="na">FromPort</span><span class="pi">:</span> <span class="s1">'</span><span class="s">80'</span>
        <span class="na">ToPort</span><span class="pi">:</span> <span class="s1">'</span><span class="s">80'</span>
        <span class="na">CidrIp</span><span class="pi">:</span> <span class="s">0.0.0.0/0</span>
      <span class="pi">-</span> <span class="na">IpProtocol</span><span class="pi">:</span> <span class="s">tcp</span>
        <span class="na">FromPort</span><span class="pi">:</span> <span class="s1">'</span><span class="s">22'</span>
        <span class="na">ToPort</span><span class="pi">:</span> <span class="s1">'</span><span class="s">22'</span>
        <span class="na">CidrIp</span><span class="pi">:</span> <span class="s">0.0.0.0/0</span>
</code></pre></div></div>

<h3 id="create-a-cloud-formation-stack">Create a Cloud Formation stack</h3>

<ul>
  <li><img src="../images/influxdb/2020-12-01-influxdb-aws-select-cloudformation.png" alt="Select Cloudformation" /></li>
  <li><img src="/images/influxdb/2020-12-01-influxdb-aws-select-create-stack.png" alt="Select Create Stack" /></li>
  <li><img src="/images/influxdb/2020-12-01-influxdb-aws-upload-template.png" alt="Upload Template" /></li>
  <li>On the rest of the screens the only thing you have to do is to name the stack, you can skip the rest of the options.</li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws cloudformation create-stack <span class="se">\</span>
  <span class="nt">--stack-name</span> influxdb-trial-stack <span class="se">\</span>
  <span class="nt">--region</span> eu-central-1 <span class="se">\</span>
  <span class="nt">--template-body</span> file://<span class="nv">$PWD</span>/stack.yaml
</code></pre></div></div>

<p>Go back to the EC2 services page and find the instances menu. There you will be able to see your newly created instance. Wait until it finishies initialization and has all of its checkes passed.</p>

<p><img src="/images/influxdb/2020-12-01-influxdb-aws-instance-initialization.png" alt="EC2 instance initialization" /></p>

<h3 id="connect-to-your-instance">Connect to your instance</h3>

<p><img src="/images/influxdb/2020-11-23-influxdb-aws-get-instance-dns.png" alt="Get AMI instance DNS" /></p>

<p>Create a connection to our instance:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh <span class="nt">-v</span> <span class="nt">-i</span> InfluxDB_AWS_example.pem <span class="se">\</span>
  ubuntu@ec2-3-122-XXX-XX.eu-central-1.compute.amazonaws.com
</code></pre></div></div>

<h2 id="install-and-set-up-influxdb-on-the-ec2-instance">Install and set up InfluxDB on the EC2 instance</h2>

<h3 id="install-influxdb">Install InfluxDB</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wget https://dl.influxdata.com/influxdb/releases/influxdb_2.0.2_amd64.deb
<span class="nb">sudo </span>dpkg <span class="nt">-i</span> influxdb_2.0.2_amd64.deb
</code></pre></div></div>

<p>Start the influxdb service.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl start influxdb
</code></pre></div></div>

<p>Setup InfluxDB configuration settings</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>influx setup
</code></pre></div></div>

<p>Here you need to add a username, a password, and name your organization and your primary bucket. You can skip on the retention period question.</p>

<h2 id="try-out-influxdb">Try out InfluxDB</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>influx bucket list
ID   Name  Retention Organization ID
61003b98acb988da _monitoring 168h0m0s aca7861debe89fb5
62a458b6d3091276 _tasks  72h0m0s  aca7861debe89fb5
d4e2f2ae14c34289 test_bucket 1h0m0s  aca7861debe89fb5
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">date</span> +%s
1606723341
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>influx write <span class="nt">-b</span> test_bucket <span class="nt">-o</span> nocibambi@gmail.com <span class="nt">-p</span> s <span class="s1">'test_measurement,host=testHost testField="testFieldValue" 1606723341'</span>
</code></pre></div></div>

<p>Use Ctrl-D to execute the query.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>influx query
from<span class="o">(</span>bucket: <span class="s2">"test_bucket"</span><span class="o">)</span> |&gt; range<span class="o">(</span>start:-1h<span class="o">)</span>
Result: _result
Table: keys: <span class="o">[</span>_start, _stop, _field, _measurement, host]
                   _start:time                      _stop:time           _field:string     _measurement:string             host:string                      _time:time           _value:string  
<span class="nt">------------------------------</span>  <span class="nt">------------------------------</span>  <span class="nt">----------------------</span>  <span class="nt">----------------------</span>  <span class="nt">----------------------</span>  <span class="nt">------------------------------</span>  <span class="nt">----------------------</span>  
2020-11-30T07:03:07.010273692Z  2020-11-30T08:03:07.010273692Z               testField        test_measurement                testHost  2020-11-30T08:02:21.000000000Z          testFieldValue  
</code></pre></div></div>]]></content><author><name></name></author><category term="AWS" /><category term="EC2" /><category term="InfluxDB" /><summary type="html"><![CDATA[How to set up AWS Cloud for InfluxDB?]]></summary></entry><entry><title type="html">Grouping data with Flux in InfluxDB</title><link href="https://andrasnovoszath.com/influxdb/flux/time-series/2020/11/17/influxdb-flux-group.html" rel="alternate" type="text/html" title="Grouping data with Flux in InfluxDB" /><published>2020-11-17T00:00:00-06:00</published><updated>2020-11-17T00:00:00-06:00</updated><id>https://andrasnovoszath.com/influxdb/flux/time-series/2020/11/17/influxdb-flux-group</id><content type="html" xml:base="https://andrasnovoszath.com/influxdb/flux/time-series/2020/11/17/influxdb-flux-group.html"><![CDATA[<p>Grouping happens based on <strong>group keys</strong> which effectilve are the name of columns used for the grouping. A group then consists of rows having identical values in the group key columns.</p>

<h2 id="example">Example</h2>

<p>Let’s consider the http api request duration data.</p>

<pre><code class="language-flux">from(bucket: "trial_bucket")
  |&gt; range(start: -15m)
  |&gt; filter(fn: (r) =&gt; r._measurement == "http_api_request_duration_seconds")
</code></pre>

<p>In respect to the time columns, it is ‘grouped’, by default, by its ‘start’ and ‘end’ times.</p>

<p><img src="/images/influxdb/influxdb-group-default-data.png" alt="default grouping" /> “Default grouping”</p>

<p><img src="/images/influxdb/influxdb-group-default-chart.png" alt="default chart" /> “Default grouping as chart”</p>

<h2 id="grouping">Grouping</h2>

<p>Now, with the following snippet, we group data along the <code class="highlighter-rouge">_measurement</code> and <code class="highlighter-rouge">_field</code> columns.</p>

<pre><code class="language-flux">from(bucket: "trial_bucket")
  |&gt; range(start: -15m)
  |&gt; filter(fn: (r) =&gt; r._measurement == "http_api_request_duration_seconds")
  |&gt; group(columns: ["_measurement", "_field"])
</code></pre>

<p>This will change the group keys:</p>

<p><img src="/images/influxdb/influxdb-group-time-data.png" alt="grouped keys" /></p>

<p>And will also shape the charts:</p>

<p><img src="/images/influxdb/influxdb-group-time-chart.png" alt="grouped by time chart" /></p>

<p>As observations of the same time now belong to the same data, plotting them as a line chart on the time axis produces vertical lines.</p>

<h2 id="aggregate-and-ungroup">Aggregate and ungroup</h2>

<p>For the next step let’s calculate the mean values of the request durations.</p>

<pre><code class="language-flux">from(bucket: "trial_bucket")
  |&gt; range(start: -15m)
  |&gt; filter(fn: (r) =&gt; r._measurement == "http_api_request_duration_seconds")
  |&gt; group(columns: ["_time"])
  |&gt; mean()
  |&gt; group()  
</code></pre>

<p>While we calucalted the mean values for each timestamp, this also resulted in separate tables consisting of a single value. We can use the <code class="highlighter-rouge">group()</code> function to ungroup data, that is, to merge all tables into a single table.</p>

<p>This will generate the following chart.</p>

<p><img src="/images/influxdb/influxdb-group-degroup-chart.png" alt="mean data" /></p>

<p>We can produce the same result by explicitly turning off grouping on specific columns with the <code class="highlighter-rouge">mode</code> parameter.</p>

<h2 id="mode"><code class="highlighter-rouge">mode</code></h2>

<p>The <code class="highlighter-rouge">group()</code> function also accepts a <code class="highlighter-rouge">mode</code> parameter with the following values:</p>

<ul>
  <li><code class="highlighter-rouge">by</code>: Group by the columns defined in the <code class="highlighter-rouge">columns</code> parameter.</li>
  <li><code class="highlighter-rouge">except</code>: Group by the columns <strong>not defined</strong> in the <code class="highlighter-rouge">columns</code> parameter.</li>
</ul>

<p>Accordingly, we can modify the above code to get the same result:</p>

<pre><code class="language-flux">from(bucket: "trial_bucket")
  |&gt; range(start: -15m)
  |&gt; filter(fn: (r) =&gt; r._measurement == "http_api_request_duration_seconds")
  |&gt; group(columns: ["_time"])
  |&gt; mean()
  |&gt; group(columns: ["_time", "_value"], mode: "except")
</code></pre>]]></content><author><name></name></author><category term="InfluxDB" /><category term="Flux" /><category term="time-series" /><summary type="html"><![CDATA[How can you group data with Flux in InfluxDB?]]></summary></entry><entry><title type="html">Filtering with Flux in InfluxDB</title><link href="https://andrasnovoszath.com/influxdb/flux/filtering/querying/2020/11/15/influxdb-flux-filter.html" rel="alternate" type="text/html" title="Filtering with Flux in InfluxDB" /><published>2020-11-15T00:00:00-06:00</published><updated>2020-11-15T00:00:00-06:00</updated><id>https://andrasnovoszath.com/influxdb/flux/filtering/querying/2020/11/15/influxdb-flux-filter</id><content type="html" xml:base="https://andrasnovoszath.com/influxdb/flux/filtering/querying/2020/11/15/influxdb-flux-filter.html"><![CDATA[<p>The <code class="highlighter-rouge">filter()</code> function behaves similarly to the <code class="highlighter-rouge">WHERE</code> command in SQL.</p>

<pre><code class="language-flux">from(bucket: "trial_bucket")
  |&gt; range(start: v.timeRangeStart, stop: v.timeRangeStop)
  |&gt; filter(fn: (r) =&gt; r["_measurement"] == "service_org_duration")
</code></pre>

<ul>
  <li>The <code class="highlighter-rouge">fn</code> parameter expects a <code class="highlighter-rouge">predicate function</code>, that is an anonymous function producing a boolean (<code class="highlighter-rouge">true</code>/<code class="highlighter-rouge">false</code>) output. The filtering will include rows for which <code class="highlighter-rouge">fn</code> returns <code class="highlighter-rouge">true</code> based on the expression.</li>
  <li>The <code class="highlighter-rouge">r</code> argument of the <code class="highlighter-rouge">fn</code> parameter stands for the rows.</li>
</ul>]]></content><author><name></name></author><category term="InfluxDB" /><category term="Flux" /><category term="filtering" /><category term="querying" /><summary type="html"><![CDATA[How does filtering works with Flux in InfluxDB?]]></summary></entry><entry><title type="html">Writing data to InfluxDB with Telegraf</title><link href="https://andrasnovoszath.com/influxdb/time-series/database/2020/11/14/influxdb-telegraf.html" rel="alternate" type="text/html" title="Writing data to InfluxDB with Telegraf" /><published>2020-11-14T00:00:00-06:00</published><updated>2020-11-14T00:00:00-06:00</updated><id>https://andrasnovoszath.com/influxdb/time-series/database/2020/11/14/influxdb-telegraf</id><content type="html" xml:base="https://andrasnovoszath.com/influxdb/time-series/database/2020/11/14/influxdb-telegraf.html"><![CDATA[<h2 id="what-is-telegraf">What is Telegraf?</h2>

<p><a href="https://www.influxdata.com/time-series-platform/telegraf/">Telegraf</a> is InfluxData’s time series data collection and reporting agent. Its main functionality is to collect data with the help of its plugins from a wide range of sources and to feed it to an InfluxDB database. It also can ingest data from InfluxDB databases and generate reports on them.</p>

<p>At the time of writing, it has more than 200 integrations, like Amazon ECS and Docker. You can see the full list <a href="https://www.influxdata.com/products/integrations/">here</a>.</p>

<p>Using Telegraf with InfluxDB most importantly consists of configuring Telegraf either automatically or manually. Configurations are stored in <code class="highlighter-rouge">telegraf.conf</code>.</p>

<p>The following steps assume that you have Telegraf installed and running. If this is not the case, you can follow the instructions <a href="https://docs.influxdata.com/telegraf/v1.16/introduction/installation/">here</a>.</p>

<h2 id="automatic-configuration">Automatic configuration</h2>

<p>You can set up a subset of Telegraf plugins automatically (for the rest, do manual configuration).</p>

<p>Steps in the InfluxDB UI:</p>

<ol>
  <li>Open the <strong>Data</strong> screen from the navigation menu</li>
  <li>Select the <strong>Telegraf</strong> tab</li>
  <li>Select <strong>Create Configuration</strong></li>
  <li>In the <strong>Bucket</strong> dropdown, choose the bucket to where you want to write the data</li>
  <li>Select the plugin groups you would like to use and click <strong>Continue</strong>. This will open a new window</li>
  <li>In the window, add a name and description (optional)</li>
  <li>If needed, configure the individual plugins within the group. (A green checkmark denotes plugins with no need of configuration)</li>
  <li>Click <strong>Create and Verify</strong>. This opens a test page.</li>
  <li>In the test page, follow the instructions to set up telegraf and click <strong>Listen to Data</strong>. This should result in a <strong>Connection Found!</strong> message.</li>
  <li>You can close the screen with the <strong>Finish</strong> button.</li>
</ol>

<p>For using Telegraf with Window host monitoring, you may need to do some following configuration, see <a href="https://docs.influxdata.com/influxdb/v2.0/write-data/no-code/use-telegraf/auto-config/#windows">here</a>.</p>]]></content><author><name></name></author><category term="InfluxDB" /><category term="time-series" /><category term="database" /><summary type="html"><![CDATA[How to use Telegraf to write data to InfluxDB?]]></summary></entry><entry><title type="html">Notifications in InfluxDB</title><link href="https://andrasnovoszath.com/influxdb/monitoring/time-series/notification/2020/11/13/influxdb-notifications.html" rel="alternate" type="text/html" title="Notifications in InfluxDB" /><published>2020-11-13T00:00:00-06:00</published><updated>2020-11-13T00:00:00-06:00</updated><id>https://andrasnovoszath.com/influxdb/monitoring/time-series/notification/2020/11/13/influxdb-notifications</id><content type="html" xml:base="https://andrasnovoszath.com/influxdb/monitoring/time-series/notification/2020/11/13/influxdb-notifications.html"><![CDATA[<h2 id="notification-endpoints">Notification endpoints</h2>

<p>Notification endpoints define connections to third party services.</p>

<h3 id="create-notification-endpoints">Create notification endpoints</h3>

<ol>
  <li>Select the <strong>Alerts</strong> screen from the navigation menu;</li>
  <li>At the top of the <strong>Notification Endpoints</strong> section click the <strong>Create</strong> button;</li>
  <li>Select a <strong>Destination</strong> from the drop-down menu;</li>
  <li>Add a name and a description (optional);</li>
  <li>Add the destination-specific configurations;</li>
  <li>Click <strong>Create</strong>.</li>
</ol>

<p>For specific details for the different endpoints, see the <a href="https://docs.influxdata.com/influxdb/v2.0/monitor-alert/notification-endpoints/create/">documentation</a>.</p>

<h3 id="manage-notification-endpoints">Manage notification endpoints</h3>

<p>In the <strong>Alerts</strong> menu, under the <strong>Notification Endpoints</strong> section, you can manage notifications. In particular, you can:</p>

<ul>
  <li>Review the <strong>list</strong> of the existing notification endpoints;</li>
  <li>Review their <strong>history</strong> (eye icon);</li>
  <li><strong>Update</strong> a notification behavior (by clicking on their name);</li>
  <li><strong>Rename</strong> them (pen icon next to their name);</li>
  <li><strong>Turn them on/off</strong> (toggle button);</li>
  <li>Add <strong>labels</strong> to them;</li>
  <li><strong>Delete</strong> them (trash icon).</li>
</ul>

<h2 id="notification-rules">Notification rules</h2>

<p>Notification rules generate notifications by triggering notificaton endpoints based on a given condition regarding the outcome of checks.</p>

<h3 id="create-notification-rules">Create notification rules</h3>

<p>Before your first notification rule, you need to have at least one notification endpoint in place.</p>

<ol>
  <li>Select the <strong>Alerts</strong> screen from the navigation menu.</li>
  <li>At the top of the <strong>Notification Rules</strong> section click the <strong>Create</strong> button;</li>
  <li>In the <strong>About</strong> section add
    <ol>
      <li><strong>Name</strong></li>
      <li><strong>Schedule</strong>: how often you would like the notification to review checks and trigger a message</li>
      <li><strong>Offset</strong>: the delay relative to the start time of the intervals set under <strong>Schedule</strong>.</li>
    </ol>
  </li>
  <li>In the <strong>Conditions</strong> section, define the rule that will trigger the notification based on check statuses and (optionally) on tag values.</li>
  <li>In the <strong>Messages</strong> section select which endpoint should the rule trigger.</li>
  <li>Click <strong>Create Notification Rule</strong>.</li>
</ol>

<h3 id="manage-notification-rules">Manage notification rules</h3>

<p>In the <strong>Alerts</strong> screen, under the <strong>Notification Rules</strong> section, you can manage notifications. In particular, you can:</p>

<ul>
  <li>Review the <strong>list</strong> of the existing notification rules;</li>
  <li>Review their <strong>history</strong> (eye icon, <strong>View History</strong>);</li>
  <li>Create a <strong>clone</strong> of an existing notification (clone icon)</li>
  <li><strong>Update</strong> a notification behavior (by clicking on their name);</li>
  <li><strong>Rename</strong> them (pen icon next to their name);</li>
  <li><strong>Turn them on/off</strong> (toggle button);</li>
  <li>Add <strong>labels</strong> to them;</li>
  <li><strong>Delete</strong> them (trash icon).</li>
</ul>]]></content><author><name></name></author><category term="InfluxDB" /><category term="monitoring" /><category term="time-series" /><category term="notification" /><summary type="html"><![CDATA[How to create and manage notifications in InfluxDB?]]></summary></entry><entry><title type="html">Checks in InlfuxDB</title><link href="https://andrasnovoszath.com/2020/11/12/influxdb-check.html" rel="alternate" type="text/html" title="Checks in InlfuxDB" /><published>2020-11-12T00:00:00-06:00</published><updated>2020-11-12T00:00:00-06:00</updated><id>https://andrasnovoszath.com/2020/11/12/influxdb-check</id><content type="html" xml:base="https://andrasnovoszath.com/2020/11/12/influxdb-check.html"><![CDATA[<!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-11-12-influxdb-check.ipynb
-->

<div class="container" id="notebook-container">
        
    
    
<div class="cell border-box-sizing code_cell rendered">

</div>
    

<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>You can use InfluxDB to monitor your data and generate notifications reporting its status.</p>
<h2 id="Concepts">Concepts<a class="anchor-link" href="#Concepts"> </a></h2><ul>
<li><strong>Check</strong>: generate statuses based on a queries expressing a conditino. It stores them in the <code>_monitoring</code> bucket (under <code>statuses</code> measurement)</li>
<li><strong>Notification rule</strong>: check the <code>statuses</code> measurement and, based on its own conditions, triggers the notification endpoint. It also stores notifications in the <code>_monitoring</code> bucket (under <code>notifications</code> measurement)</li>
<li><strong>Notification endpoint</strong>: </li>
</ul>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="Checks">Checks<a class="anchor-link" href="#Checks"> </a></h2><p>The elements of a check:</p>
<ol>
<li>Query: Defines what to monitor.</li>
<li>Configuration: defines check interval, messages, and status.</li>
</ol>
<p>Check types</p>
<ul>
<li><strong>Threshold check</strong>: monitors a value against (high/low) thresholds and assigns one of the following values: <strong>CRIT</strong>, <strong>WARN</strong>, <strong>INFO</strong>, <strong>OK</strong>.</li>
<li><strong>Deadman check</strong>: monitors if a series or group responds within a given amount of time.</li>
</ul>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="Create-a-check">Create a check<a class="anchor-link" href="#Create-a-check"> </a></h2><ol>
<li>Select the <strong>Alerts</strong> menu in the navigation pane.</li>
<li>Click on <strong>Create</strong></li>
<li>Select the check type.</li>
</ol>
<h2 id="Query">Query<a class="anchor-link" href="#Query"> </a></h2><p>By default, you will find yourself in the <strong>Define Query</strong> screen.</p>
<ol>
<li>Select the <strong>bucket</strong>, the <strong>measurement</strong>, the <strong>field</strong>, and the <strong>tag sets</strong>.</li>
<li>For threshold check: Select an <strong>aggregate function</strong> (e.g. mean, median, std, etc.).</li>
</ol>
<p>You can preview the results of the query by clicking on <strong>Submit</strong>.</p>
<p>After these steps, select the <strong>Configure Check</strong> screen.</p>
<ol>
<li>Define the check schedule interval (this updates the aggregate function interval).</li>
<li>Filter the check based on tags (Optional).</li>
<li>Edit the status message template (Optional).</li>
</ol>
<ul>
<li>For threshold check: define the thresholds and rules that will trigger the specific statuses. You can also set them with the mouse by moving their respective labels on the preview screen.</li>
<li>For deadman check: specify the duration to check for, the status the lack of series or groups should trigger, and time after which it should stop checking the series / group.</li>
</ul>
<p>Finally, name the check at the top of the screen.</p>
<p>Click the green checkmark to save the check.</p>

</div>
</div>
</div>
</div>]]></content><author><name></name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">InfluxDB tasks</title><link href="https://andrasnovoszath.com/2020/11/05/influxdb-tasks.html" rel="alternate" type="text/html" title="InfluxDB tasks" /><published>2020-11-05T00:00:00-06:00</published><updated>2020-11-05T00:00:00-06:00</updated><id>https://andrasnovoszath.com/2020/11/05/influxdb-tasks</id><content type="html" xml:base="https://andrasnovoszath.com/2020/11/05/influxdb-tasks.html"><![CDATA[<!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-11-05-influxdb-tasks.ipynb
-->

<div class="container" id="notebook-container">
        
    
    
<div class="cell border-box-sizing code_cell rendered">

</div>
    

<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>Tasks are scheduled Flux queries that allow you to process data with InfluxDB.</p>
<h3 id="Task-components">Task components<a class="anchor-link" href="#Task-components"> </a></h3><p>Tasks should have the following components:</p>
<ul>
<li>Options</li>
<li>Data source</li>
<li>Processing steps</li>
<li>Destination</li>
</ul>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="Task-Options">Task Options<a class="anchor-link" href="#Task-Options"> </a></h2><p>You can specify options that tasks will use. This makes it easier to reuse and modify your tasks.</p>

<pre><code>option task = {
    // Task name
    name: "monitor task",

    // Run interval
    every: 5m,

    // Cron job
    cron : "0 * * * * *"

    // Task start delay
    offset: 10m,

    // Maximum number of concurrent tasks
    concurrency: 2,

    // Number of tries before getting failed status
    retry: 5,
}</code></pre>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="Task-data-source">Task data source<a class="anchor-link" href="#Task-data-source"> </a></h2><p>You can use the <code>from()</code> function to specify the data you try to get.</p>

<pre><code>data = from(bucket: "status info")
  // `-task.every` is a task option passed here
  |&gt; range(start: -task.every)
  |&gt; filter(fn: (r) =&gt;
    r._measurement == "temperature" and
    r.host == "dataSource"
  )</code></pre>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="Data-processing-and-destination">Data processing and destination<a class="anchor-link" href="#Data-processing-and-destination"> </a></h2><p>You can use the <code>to()</code> function to store the results in another bucket.</p>

<pre><code>data
  // Process
  |&gt; aggregateWindow(
      every: 1h,
      fn: sum
  )

  // Store results
  |&gt; to(bucket: "status_log", org: "logger")</code></pre>
<p>You can learn more about data processing in the <a href="https://docs.influxdata.com/influxdb/v2.0/process-data/common-tasks/">documentation</a>.</p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="Create-a-task-in-the-UI">Create a task in the UI<a class="anchor-link" href="#Create-a-task-in-the-UI"> </a></h2><p>In the UI, you can create tasks by the following ways</p>
<ul>
<li>The <strong>Data Explorer</strong> screen</li>
<li>The <strong>Task</strong> screen</li>
<li>Import (in the <strong>Task</strong> screen)</li>
<li>Create from template (in the <strong>Settings</strong> screen)</li>
<li>Clone a taks (in the <strong>Task</strong> screen)</li>
</ul>
<h3 id="Data-Explorer">Data Explorer<a class="anchor-link" href="#Data-Explorer"> </a></h3><ol>
<li>Open the <strong>Data Explorer</strong></li>
<li>Select <strong>Task</strong></li>
<li>Define the task options.</li>
<li>Select a token.</li>
<li>Click <strong>Save as Task</strong></li>
</ol>
<h3 id="Task-UI">Task UI<a class="anchor-link" href="#Task-UI"> </a></h3><ol>
<li>Open the <strong>Task</strong> screen</li>
<li>Select <strong>Create Task</strong></li>
<li>Click <strong>New Task</strong></li>
<li>Define the task options.</li>
<li>Select a token.</li>
<li>Enter your script</li>
<li>Click <strong>Save</strong></li>
</ol>

</div>
</div>
</div>
</div>]]></content><author><name></name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Custom dashboard variables in InfluxDB</title><link href="https://andrasnovoszath.com/2020/11/04/influxdb-custom-dashboard-variables.html" rel="alternate" type="text/html" title="Custom dashboard variables in InfluxDB" /><published>2020-11-04T00:00:00-06:00</published><updated>2020-11-04T00:00:00-06:00</updated><id>https://andrasnovoszath.com/2020/11/04/influxdb-custom-dashboard-variables</id><content type="html" xml:base="https://andrasnovoszath.com/2020/11/04/influxdb-custom-dashboard-variables.html"><![CDATA[<!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-11-04-influxdb-custom-dashboard-variables.ipynb
-->

<div class="container" id="notebook-container">
        
    
    
<div class="cell border-box-sizing code_cell rendered">

</div>
    

<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>You can create a new variable in the <strong>Data Explorer</strong>, in the <strong>Settings</strong> or import from InfluxDB in JSON. Here we review the steps to create a variable in the <strong>Data Explorer</strong></p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="Dashboard-variable-types">Dashboard variable types<a class="anchor-link" href="#Dashboard-variable-types"> </a></h2><p>There are three types of dashboard variables. The types refert to the structuring of the variable's possible values.</p>
<ul>
<li>Map: stores values as key/value pairs in a comma separated format. The UI presents the keys but works with the values.</li>
<li>Query: uses values from a Flux query's <code>_value</code> column. (If the values are in another colum, you can first rename that column to <code>_value</code>)</li>
<li>CSV: uses a CSV-formatted list.</li>
</ul>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="Create-variable-in-Data-Explorer">Create variable in Data Explorer<a class="anchor-link" href="#Create-variable-in-Data-Explorer"> </a></h2><ol>
<li>Open the <strong>Data Explorer</strong></li>
<li>Build a query with the <strong>Query Builder</strong> or the <strong>Script Editor</strong></li>
<li>Select <strong>Save As</strong> at the top right corner</li>
<li>Select the <strong>Variable</strong> tab.</li>
<li>Add a name for the variable and click <strong>Save as Variable</strong></li>
</ol>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="Viewing-dashboard-variables">Viewing dashboard variables<a class="anchor-link" href="#Viewing-dashboard-variables"> </a></h2><p>You can view variables which belong to your <strong>organization</strong>.</p>
<p>You can review them in two places:</p>
<ol>
<li>In the <strong>Settings</strong> menu on the <strong>Variables</strong> tab</li>
<li>In the <strong>Data Explorer</strong>, in <strong>Script Editor</strong> mode under the <strong>Variables</strong> tab.</li>
</ol>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="Update,-export,-or-delete-a-dashboard-variable">Update, export, or delete a dashboard variable<a class="anchor-link" href="#Update,-export,-or-delete-a-dashboard-variable"> </a></h2><ol>
<li>Open the <strong>Settings</strong> menu in the navigation bar</li>
<li>Select the <strong>Variables</strong> tab.</li>
<li>For update, click on a variable's name in the list. To rename, export, or delete, select the appropriate icon in the top right corner of their card.</li>
</ol>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="Variable-queries">Variable queries<a class="anchor-link" href="#Variable-queries"> </a></h2><h3 id="List-buckets">List buckets<a class="anchor-link" href="#List-buckets"> </a></h3>
<pre><code>// List buckets in the current organization
buckets()

// Rename the `name` column to `_value`
  |&gt; rename(columns: {"name": "_value"})

// Return a table only with the specific columns
  |&gt; keep(columns: ["_value"])</code></pre>
<h3 id="List-measurements">List measurements<a class="anchor-link" href="#List-measurements"> </a></h3>
<pre><code>// List all measurements in the bucket

// Import the schema package
import "influxdata/influxdb/schema"

// List the measurements of the specified bucket
schema.measurements(bucket: "bucket-name")</code></pre>
<h3 id="List-fields-in-a-measurement">List fields in a measurement<a class="anchor-link" href="#List-fields-in-a-measurement"> </a></h3><p>List field in the specified bucket + measurement.</p>

<pre><code>// Import the schema package
import "influxdata/influxdb/schema"

schema.measurementTagValues(
  bucket: "bucket-name",
  measurement: "measurement-name",
  tag: "_field"
)</code></pre>
<h2 id="List-unique-tag-values">List unique tag values<a class="anchor-link" href="#List-unique-tag-values"> </a></h2><p>List the unique values of the <code>host</code> tag.</p>

<pre><code>import "influxdata/influxdb/schema"

schame.measurementTagValues(bucket: "bucket-name", tag: "host")</code></pre>

</div>
</div>
</div>
</div>]]></content><author><name></name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Dashboard variables in InfluxDB</title><link href="https://andrasnovoszath.com/2020/11/03/influxdb-dashboard-variables.html" rel="alternate" type="text/html" title="Dashboard variables in InfluxDB" /><published>2020-11-03T00:00:00-06:00</published><updated>2020-11-03T00:00:00-06:00</updated><id>https://andrasnovoszath.com/2020/11/03/influxdb-dashboard-variables</id><content type="html" xml:base="https://andrasnovoszath.com/2020/11/03/influxdb-dashboard-variables.html"><![CDATA[<!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-11-03-influxdb-dashboard-variables.ipynb
-->

<div class="container" id="notebook-container">
        
    
    
<div class="cell border-box-sizing code_cell rendered">

</div>
    

<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="Variables">Variables<a class="anchor-link" href="#Variables"> </a></h2><p>Dashboard variables are useful when you would like to modify dashboard cells without editing the original queries based on which the dashboard is built. You can also use Flux to build queries for dashboard cells.</p>
<p>Dashboard variables can be</p>
<ul>
<li>Predefined: <code>v.timeRangeStart</code>, <code>v.timeRangeStop</code>, <code>v.windowPeriod</code></li>
<li>Custom: defined in the user interface</li>
</ul>
<h2 id="Quering-a-variable">Quering a variable<a class="anchor-link" href="#Quering-a-variable"> </a></h2><p>Variables are stored in a <code>v</code> standing for a particular dashboard</p>

<pre><code>from(bucket: v.bucket)
  |&gt; range(start: v.timeRangeStart, stop: v.timeRangeStop)
  |&gt; filter(fn: (r) =&gt; r._measurement == v._measurement and r.field == v.field)
  |&gt; aggregateWindow(every: v.windowPeriod, fn: mean)</code></pre>
<h2 id="Adding-a-variable">Adding a variable<a class="anchor-link" href="#Adding-a-variable"> </a></h2><ol>
<li>Check available variables on the right hand side under the <strong>Variables</strong> tab</li>
<li>Select the name of the variable you would like to add</li>
<li>Select a value from the <strong>Value</strong> dropdown</li>
</ol>
<h2 id="Linking-a-dashboard-with-variables">Linking a dashboard with variables<a class="anchor-link" href="#Linking-a-dashboard-with-variables"> </a></h2><p>After adding the variable, the dashboard's url will have the following structure appended to its end <code>&amp;vars[variable_name]=value</code>. This allows you to directly share the dashboard with the variable included with a simple url.</p>
<h2 id="Custom-variables">Custom variables<a class="anchor-link" href="#Custom-variables"> </a></h2><p>You can create variables for your dashboard in the following ways:</p>
<ul>
<li>in the <strong>Data Explorer</strong></li>
<li>in <strong>Settings</strong></li>
<li>via import</li>
</ul>
<h3 id="Naming-restrictions">Naming restrictions<a class="anchor-link" href="#Naming-restrictions"> </a></h3><p>Variable names has to</p>
<ul>
<li>be unique</li>
<li>start with and underscore '<code>_</code>'</li>
<li>they cannot be one of the Flux reserved keywords: and, import, not, return, option, test, empty, in, or, package, and builtin.</li>
</ul>

</div>
</div>
</div>
</div>]]></content><author><name></name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Data visualization and dashboards with InfluxDB</title><link href="https://andrasnovoszath.com/2020/11/02/influxdb-visualization-dashboard.html" rel="alternate" type="text/html" title="Data visualization and dashboards with InfluxDB" /><published>2020-11-02T00:00:00-06:00</published><updated>2020-11-02T00:00:00-06:00</updated><id>https://andrasnovoszath.com/2020/11/02/influxdb-visualization-dashboard</id><content type="html" xml:base="https://andrasnovoszath.com/2020/11/02/influxdb-visualization-dashboard.html"><![CDATA[<!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-11-02-influxdb-visualization-dashboard.ipynb
-->

<div class="container" id="notebook-container">
        
    
    
<div class="cell border-box-sizing code_cell rendered">

</div>
    

<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="Visualizations">Visualizations<a class="anchor-link" href="#Visualizations"> </a></h2>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<ol>
<li>Open <strong>Data Explorer</strong></li>
<li>Create a flux query (either with the panel at the bottom, or writing manually in the <strong>Script Editor</strong>)</li>
<li>Press <strong>Submit</strong> to run the query. This will generate the graph preview.</li>
</ol>
<ul>
<li>You can add further queries with the <code>+</code> button</li>
<li>You an hide/show the visualizations by clicking on the eye icon</li>
</ul>
<p>You can choose a different graph type from the left menu.</p>
<p>To see you data in a tablet format, turn on the <strong>View Raw Data</strong> switch.</p>
<p>You can refresh the dashboard with the refresh button. 
You can change the auto-refresh interval (by default it is stopped and shows a pause sign).</p>
<p>You can save your query as a dashboard cell by clicking on the <strong>Save as</strong></p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="Dashboards">Dashboards<a class="anchor-link" href="#Dashboards"> </a></h2>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<ol>
<li>Select the <strong>Boards</strong> menu item in the navigation menu.</li>
<li>Select <strong>Create Dashboard</strong> menu in the middle and select <strong>New Dashboard</strong></li>
<li>Name the dashboard at the top field (saying <strong>Name this dashboard</strong>)</li>
</ol>
<p>You can also import a dashboard from a file or simply pasting a JSON file.</p>
<p>You can also create a new dashboard from templates.</p>
<p>You can also clone your dashboard and change it for another need.</p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>For these operations you need to open a dashboard (e.g. by clicking on its name in the <strong>Boards</strong> screen).</p>
<ul>
<li>You can add further data to your dashboard with the <strong>Add cell</strong> button at the top left corner.</li>
<li>You can add notes to your dashboard with the <strong>Add Note</strong> buttom at the top left corner.</li>
<li>Change time zone</li>
<li>Manually refresh</li>
<li>Set automatic refresh interval</li>
<li>Select time range</li>
</ul>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="Further-operations">Further operations<a class="anchor-link" href="#Further-operations"> </a></h2><ul>
<li><strong>Export</strong>: Click on the gear icon and select <strong>Export</strong>. You can export the dashboard as<ul>
<li>JSON file</li>
<li>A template
Or you can copy the JSON to the clipboard.</li>
</ul>
</li>
</ul>
<ul>
<li><strong>Delete</strong></li>
</ul>

</div>
</div>
</div>
</div>]]></content><author><name></name></author><summary type="html"><![CDATA[]]></summary></entry></feed>